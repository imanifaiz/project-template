#!/usr/bin/env bash

BRANCH=""
REMOTE="origin"
PROJECT_PATH="/var/www/project-template"
COMPOSER_ALLOW_SUPERUSER=1

# Function to display usage
usage() {
    echo "Usage: $0 [-b branch] [-r remote] [-p project_path]"
    exit 1
}

# Function to get the latest tag
get_latest_tag() {
    git fetch --tags
    LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
    echo $LATEST_TAG
}

# Parse command line arguments for branch, remote, and project path
while getopts "b:r:p:" flag
do
    case "${flag}" in
        b) BRANCH=${OPTARG};;
        r) REMOTE=${OPTARG};;
        p) PROJECT_PATH=${OPTARG};;
        *) usage;;  # Handle invalid flag
    esac
done

if [ ! -d "$PROJECT_PATH" ]; then
    echo "$PROJECT_PATH does not exist. Nothing to do."
    exit 1
fi

clear

if [ -z "$BRANCH" ]; then
    echo "No branch provided, using the latest tag."
    BRANCH=$(get_latest_tag)
fi

echo "ðŸš€ Deploying codes for branch/tag $BRANCH from remote $REMOTE at path $PROJECT_PATH"

echo "Navigate to $PROJECT_PATH"
cd "$PROJECT_PATH" || exit

echo "Pulling codes"
git checkout "$BRANCH"
git pull "$REMOTE" "$BRANCH"

echo "Install dependencies"
y | composer install

echo "Clear config caches"
php artisan config:clear

echo "Clear view caches"
php artisan view:clear

echo "Running migration"
php artisan migrate --force

echo "Restart Horizon"
php artisan horizon:terminate

echo "Change project ownership to web server"
chown nginx:nginx "$PROJECT_PATH" -R

clear
echo ""
echo "ðŸš€ Deployed codes for $BRANCH from remote $REMOTE at path $PROJECT_PATH"
